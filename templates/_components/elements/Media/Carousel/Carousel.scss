$base-class: '.el-Carousel';

@mixin useCarouselVariants($variant, $variant2: null) {
	@include useVariants($base-class, $variant, $variant2) {
		@content;
	}
}

/*
- To position carousel absolute, use the overlayCarousel mixin.
	- Inline nav should not be used when carousel is positioned absolute. Always use overlay nav.
*/
@mixin overlayCarousel() {
	position: relative;

	.el-Carousel {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}

}

@mixin positionCarouselNav($nav-position: "center") {

	.el-Carousel {

		&__nav,
		&__arrows,
		&__dotsWrapper {

			@if $nav-position=="center" {
				justify-content: center;
			}

			@if $nav-position=="left" {
				justify-content: flex-start;
			}

			@if $nav-position=="right" {
				justify-content: flex-end;
			}

		}

	}

}

/*
Note: carouselAspectRatio should not be used with overlayCarousel. When overlayCarousel is used, the component containing
the carousel should set the aspect ratio on the container where overlayCarousel is being applied.
*/
@mixin carouselAspectRatio($w: 16, $h: 9, $max-height: false) {

	.el-Carousel {

		&__slide {
			aspect-ratio: $w / $h;

			@if $max-height {
				max-height: $max-height;
			}

		}

	}

}

#{$base-class} {
	--slide-background-color: #{$color-black};
	--arrow-color: #{$color-button-primary-text-light};
	--dots-color: #{rgba($color-button-primary-text-light, .5)};
	--dots-color-active: #{$color-button-primary-text-light};
	$element: &;
	min-width: 0;
	position: relative;

	&--dark {
		--slide-background-color: #{$color-black};
		--arrow-color: #{$color-button-primary-text-dark};
		--dots-color: #{rgba($color-button-primary-text-dark, .5)};
		--dots-color-active: #{$color-button-primary-text-dark};
	}

	// ignore theme when navigation is over the image, always use dark so navigation is visible
	&--nav-overlay,
	&--arrows-overlay,
	&--arrows-sides,
	&--dots-overlay {
		--arrow-color: #{$color-button-primary-text-dark};
		--dots-color: #{rgba($color-button-primary-text-dark, .5)};
		--dots-color-active: #{$color-button-primary-text-dark};
	}

	&__slides {
		height: 100%;
		width: 100%;
		position: relative;
		z-index: 1;
		overflow: hidden;
		background-color: var(--slide-background-color);
	}

	&__slide {
		position: relative;
		display: flex;
		align-items: center;
		justify-content: center;

		& > * {
			flex-basis: 100%;
			flex-grow: 1;
		}

		* {
			max-width: 100%;
			max-height: 100%;
		}

		// & > * {
		// 	max-width: 100%;
		// 	max-height: 100%;
		// }

	}

	// &__video {
	// 	position: absolute;
	// 	top: 0;
	// 	bottom: 0;
	// 	left: 0;
	// 	right: 0;
	// }

	&__dotsWrapper {
		display: flex;
		justify-content: center;

		@include useCarouselVariants(dots-inline) {
			@include interpolate(margin-top, 12px, 20px);
		}

		@include useCarouselVariants(dots-overlay) {
			@include interpolate((padding-left, padding-right), 16px, 28px);
			position: absolute;
			@include interpolate(bottom, 12px, 20px);
			left: 0;
			right: 0;
			z-index: 5;
		}

	}

	&__dots {
		display: flex;
		align-items: center;
		justify-content: center;

		span {
			// @include interpolate(padding, 3px, 6px);
			@include interpolate((width, height), 8px, 9px);
			cursor: pointer;
			background-color: var(--dots-color);
			opacity: 1;
			@include transition((opacity, background-color));

			&.swiper-pagination-bullet-active {
				background-color: var(--dots-color-active);
			}

			&:hover {
				opacity: .6;
			}

		}
		
	}

	&__arrows {
		display: flex;
		flex-wrap: wrap;
		flex-direction: row;
		align-items: center;
		justify-content: center;

		@include useCarouselVariants(arrows-inline) {
			@include interpolate(margin-top, 12px, 16px);
		}

		@include useCarouselVariants(arrows-overlay) {
			@extend .grid-container;
			position: absolute;
			@include interpolate(bottom, 16px, 20px);
			z-index: 5;
		}

	}

	&__arrow {

		@include useCarouselVariants(arrows-icon) {

			display: inline-block;
			opacity: 1;
			@include transition(opacity);

			&:hover {
				opacity: .6;
			}

			&__icon {
				line-height: 0;
			}

			svg {
				fill: var(--arrow-color);
				display: block;
				@include interpolate(width, 12px, 14px);
				height: auto;

				* {
					fill: inherit;
				}
				
			}

		}

		@include useCarouselVariants(arrows-sides) {
			position: absolute;
			top: 50%;
			transform: translateY(-50%);
			z-index: 5;
		}

		&--prev {

			@include useCarouselVariants(arrows-sides) {
				left: 0;
				@include interpolate(left, 8px, 14px);
			}

			@include useCarouselVariants(arrows-inline) {
				@include interpolate(margin-right, 8px, 16px);
			}

			@include useCarouselVariants(arrows-overlay) {
				@include interpolate(margin-right, 8px, 16px);
			}

		}

		&--next {

			@include useCarouselVariants(arrows-sides) {
				right: 0;
				@include interpolate(right, 8px, 14px);
			}

		}
		
	}

	&__arrow,
	&__dots {
		z-index: 2;
	}

	&__nav {
		display: flex;
		justify-content: center;
		align-items: center;
		
		@include useCarouselVariants(nav-inline) {
			@include interpolate(margin-top, 12px, 20px);
			@include interpolate((margin-left, margin-right), -3px, -6px);
		}

		@include useCarouselVariants(nav-overlay) {
			position: absolute;
			bottom: 0;
			@include interpolate(bottom, 12px, 20px);
			left: 50%;
			transform: translateX(-50%);
			z-index: 5;
		}

		&>* {
			@include interpolate((margin-left, margin-right), 3px, 6px);
		}

	}

	&__nav &__dots {
		padding-top: 0;
		padding-bottom: 0;
	}

	// &__video {
	// 	&__inner {
	// 		position: relative;
	// 		height: 100%;
	// 		width: 100%;

	// 		iframe {
	// 			position: absolute;
	// 			top: 0;
	// 			left: 0;
	// 			right: 0;
	// 			bottom: 0;
	// 			height: 100%;
	// 			width: 100%;
	// 		}

	// 	}

	// }

}